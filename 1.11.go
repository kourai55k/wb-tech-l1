package main

import "fmt"

// intersect - функция для нахождения пересечения двух множеств (неупорядоченных массивов)
func intersect(a1, a2 []int) []int {
	// Создаем map для хранения элементов из первого множества (a1)
	m := make(map[int]bool)

	// Создаем слайс для результата пересечения
	res := make([]int, 0)

	// Проходим по первому множеству (a1) и сохраняем каждый элемент в map
	// Ключом будет значение элемента, а значением - true, что означает его наличие
	for i := 0; i < len(a1); i++ {
		m[a1[i]] = true
	}

	// Проходим по второму множеству (a2)
	// Проверяем, есть ли элемент a2[i] в map (то есть в первом множестве)
	for i := 0; i < len(a2); i++ {
		if _, ok := m[a2[i]]; ok {
			// Если элемент есть в map, то добавляем его в результат (res)
			res = append(res, a2[i])
		}
	}

	// Возвращаем слайс с элементами пересечения
	return res
}

func main() {
	// Пример двух множеств
	set1 := []int{1, 2, 3, 4, 5}
	set2 := []int{4, 5, 6, 7, 8}

	// Вызываем функцию intersect для нахождения пересечения
	intersection := intersect(set1, set2)

	// Выводим результат пересечения
	fmt.Println("Пересечение множеств:", intersection)
}
